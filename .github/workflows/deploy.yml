name: Deploy WeChat Mini Program

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (可选, 不填则由 package.json 版本和时间戳自动生成)'
        required: false
      desc:
        description: '版本描述 (可选, 不填则根据 Git 提交信息自动生成)'
        required: false
      robot:
        description: '机器人编号 (1-30)'
        required: false
        default: '1'
      generate_preview:
        description: '生成预览二维码'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || !startsWith(github.event.head_commit.message, 'docs')
    outputs:
      start_time: ${{ steps.setup.outputs.start_time }}

    steps:
      - name: Setup initial timestamp
        id: setup
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: |
          npm run lint
          npm run stylelint

      - name: Build project
        run: npm run build:weapp

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ((github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && !startsWith(github.event.head_commit.message, 'docs')) || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 拉取所有历史记录，以便 git log 命令可以正常工作
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist/

      - name: Create private key file
        run: |
          echo "${{ secrets.WECHAT_PRIVATE_KEY }}" > private.key
        env:
          WECHAT_PRIVATE_KEY: ${{ secrets.WECHAT_PRIVATE_KEY }}

      - name: Set version variables
        id: set_vars
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "DESC=${{ github.event.inputs.desc }}" >> $GITHUB_ENV
            echo "ROBOT=${{ github.event.inputs.robot }}" >> $GITHUB_ENV
          else
            # 从 package.json 读取版本并拼接时间戳
            PKG_VERSION=$(node -p "require('./package.json').version")
            TIMESTAMP=$(date +'%Y%m%d%H%M')
            echo "VERSION=${PKG_VERSION}-${TIMESTAMP}" >> $GITHUB_ENV
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              echo "DESC=Production build from main branch" >> $GITHUB_ENV
              echo "ROBOT=1" >> $GITHUB_ENV
            else
              echo "DESC=Development build from dev branch" >> $GITHUB_ENV
              echo "ROBOT=2" >> $GITHUB_ENV
            fi
          fi
        env:
          TZ: Asia/Shanghai

      - name: Upload to WeChat
        id: upload
        run: |
          set -o pipefail
          node scripts/upload.js | tee upload_output.log
        env:
          APP_ID: ${{ secrets.WECHAT_APP_ID }}
          PRIVATE_KEY_PATH: ./private.key
          VERSION: ${{ env.VERSION }}
          DESC: ${{ env.DESC }}
          ROBOT: ${{ env.ROBOT }}

      - name: Send Feishu Notification
        if: always()
        run: node scripts/notify.js
        env:
          # 飞书 Secrets
          FEISHU_APP_ID: ${{ secrets.FEISHU_APP_ID }}
          FEISHU_APP_SECRET: ${{ secrets.FEISHU_APP_SECRET }}
          FEISHU_CHAT_ID: ${{ secrets.FEISHU_CHAT_ID }}
          # 任务上下文
          JOB_STATUS: ${{ job.status }}
          REPO_NAME: ${{ github.repository }}
          BRANCH_NAME: ${{ github.ref_name }}
          COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
          COMMIT_MESSAGES_JSON: ${{ toJSON(github.event.commits) }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          # 从上一步获取的环境变量
          VERSION: ${{ env.VERSION }}
          # 部署耗时
          START_TIME: ${{ needs.build.outputs.start_time }}
          # 将二维码和日志文件路径传递给通知脚本
          QR_CODE_PATH: preview.jpg
          LOG_FILE_PATH: upload_output.log

      - name: Clean up
        if: always()
        run: rm -f private.key upload_output.log

      - name: Notify deployment result
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ 微信小程序部署成功！版本号: ${{ env.VERSION }}"
          else
            echo "❌ 微信小程序部署失败！"
          fi
