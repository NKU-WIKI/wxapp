---
description: 
globs: 
alwaysApply: true
---
# nkuwiki 微信小程序项目概览

## 项目简介
nkuwiki是一个基于微信小程序原生框架开发的大学生社交平台，提供学习交流、校园生活、就业创业等多个功能模块。

## 技术架构

### 核心技术栈
- **前端框架**: 微信小程序原生框架
- **UI组件库**: WeUI-miniprogram
- **数据存储**: 微信小程序本地存储 + 云开发
- **网络请求**: 封装的Promise化wx.request
- **状态管理**: Behaviors模式

### 项目结构
```
wxapp/
├── pages/              # 页面文件
│   ├── index/          # 首页
│   ├── post/           # 帖子相关
│   ├── search/         # 搜索页面
│   ├── profile/        # 个人中心
│   └── ...
├── components/         # 自定义组件
│   ├── post-item/      # 帖子组件
│   ├── user-card/      # 用户卡片
│   ├── weui/          # WeUI组件
│   └── ...
├── behaviors/          # 行为混入
├── utils/             # 工具函数
├── cloudfunctions/    # 云函数
└── icons/            # 图标资源
```

### 核心功能模块
1. **用户系统**: 登录认证、个人资料管理
2. **帖子系统**: 发布、浏览、互动（点赞、评论、收藏）
3. **搜索系统**: 内容搜索、历史记录
4. **分类系统**: 学习交流、校园生活、就业创业等
5. **通知系统**: 消息推送、互动提醒

## 开发规范概览

### 代码组织
- 使用 behaviors 实现代码复用和状态共享
- 组件化开发，单一职责原则
- 统一的错误处理和用户反馈机制
- API调用统一封装在 utils/util.js

### 命名约定
- 文件夹和文件名使用小写，多个单词用连字符分隔
- 组件名使用小写加连字符：`post-item`
- JavaScript变量和函数使用驼峰命名：`getUserInfo`
- 常量使用大写下划线：`API_BASE_URL`

### 样式规范
- 使用 rpx 单位进行响应式适配
- 颜色、间距等设计规范统一定义
- 充分利用 WeUI 组件库
- CSS变量管理主题色彩

## 性能优化策略
1. **代码分包**: 使用 lazyCodeLoading 按需加载
2. **数据优化**: pureDataPattern 优化渲染性能
3. **图片优化**: 合适尺寸、懒加载、压缩
4. **网络优化**: 请求缓存、防抖节流

## 最佳实践
1. 优先使用小程序原生能力
2. 合理使用组件化和 behaviors
3. 注重用户体验和交互反馈
4. 严格的错误处理和边界情况考虑
5. 适配不同设备和微信版本
