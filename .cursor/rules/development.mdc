## 组件化开发

- **UI组件库优先**: 项目选用 `Taro UI` 作为基础组件库，开发时应优先使用其提供的组件，以保证UI风格的统一性并提升开发效率。
- **按需引入**: 在 `config/index.ts` 中配置 `taro-ui` 的按需引入，或在 `app.scss` 中全局引入样式。推荐按需引入以减小包体积。
  ```typescript
  // app.scss
  @import "~taro-ui/dist/style/index.scss";
  ```
  同时，为确保 `Taro UI` 能够被正确编译，需在 `config/index.ts` 中进行如下配置：
  ```typescript
  // config/index.ts
  const config = {
    // ...
    weapp: {
      esnextModules: ['taro-ui']
    },
    h5: {
      esnextModules: ['taro-ui']
    }
  }
  ```
- **自定义组件**: 对于 `Taro UI` 未提供的组件，或无法满足业务需求的场景，可在 `src/components` 目录下创建自定义组件。
- **原子组件**: 在 `src/components` 目录下，创建可复用的原子组件，如 `Button`, `Tag`, `Avatar`, `Card` 等。
- **业务组件**: 针对特定业务场景，封装业务组件，如 `PostItem` (帖子列表项), `CommentList` (评论列表) 等。
- **组件文档**: 建议为核心组件编写简单的使用文档或注释，说明其 `props` 和用法。
- **样式**: 组件样式优先使用 CSS Modules (`.module.scss`)，避免全局污染。

## UI/UX 规范

- **设计风格**: 简洁、卡片式布局，多采用圆角、留白和阴影。
- **色彩规范**:
    - 主色调: 蓝色 (#4A90E2)
    - 辅助色: 灰色 (#9B9B9B), 红色 (#D0021B)
    - 背景色: 浅灰 (#F5F5F5), 白色 (#FFFFFF)
- **字体规范**:
    - 标题: 18px, Bold
    - 正文: 16px, Regular
    - 辅助文字/标签: 14px, Regular
- **组件设计**:
    - **按钮**: 主要按钮使用主色调填充，次要按钮使用描边或灰色样式。所有按钮均带有圆角。
    - **列表**: 列表项之间保持足够间距，增加分割线以区分。
    - **图标**: 采用线性图标 (Line Icon)，风格统一。
