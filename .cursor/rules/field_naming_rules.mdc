---
description: 
globs: 
alwaysApply: true
---
# 字段名规范

## 核心原则

**API接口字段名必须与后端返回字段名保持严格一致**

## 字段名映射规范

### 1. 数据库表字段到API响应字段的映射

API接口返回的字段名应该直接使用数据库表中的字段名，不进行任何转换。

#### 标准字段（所有表共有）
- `id` - 主键ID
- `create_time` - 创建时间  
- `update_time` - 更新时间
- `title` - 标题
- `content` - 内容
- `author` - 作者（website_nku/wechat_nku表）
- `original_url` - 原始链接
- `platform` - 平台标识
- `publish_time` - 发布时间

#### 特定表字段
**website_nku表专有字段：**
- `scrape_time` - 爬取时间
- `view_count` - 浏览数
- `pagerank_score` - PageRank分数
- `is_official` - 是否为官方信息

**wechat_nku表专有字段：**
- `scrape_time` - 爬取时间
- `view_count` - 阅读数
- `like_count` - 点赞数
- `is_official` - 是否为官方信息

**market_nku表专有字段：**
- `category` - 分类
- `image` - 图片列表
- `status` - 状态
- `view_count` - 浏览数
- `like_count` - 点赞数
- `comment_count` - 评论数

**wxapp_post表专有字段：**
- `openid` - 用户openid
- `nickname` - 用户昵称（作为author的来源）
- `avatar` - 用户头像
- `phone` - 手机号
- `wechatId` - 微信号
- `qqId` - QQ号
- `bio` - 用户简介
- `category_id` - 分类ID
- `image` - 图片列表
- `tag` - 标签列表
- `location` - 位置信息
- `allow_comment` - 是否允许评论
- `is_public` - 是否公开
- `view_count` - 浏览数
- `like_count` - 点赞数
- `comment_count` - 评论数
- `favorite_count` - 收藏数
- `status` - 帖子状态   
- `is_deleted` - 是否删除

### 2. 字段转换规则

#### 时间字段处理
- 数据库中的 `datetime` 类型字段在API中统一转换为 `string` 格式
- 格式：`str(datetime_value)` 或 ISO 8601 格式

#### JSON字段处理
- 数据库中的 `json` 类型字段（如 `tag`, `image`, `location`）在API中保持为对象或字符串
- 空值时返回空字符串 `""`

#### 特殊字段映射
- `wxapp_post.nickname` → API中的 `author` 字段
- `wxapp_post.id` → 构造 `original_url` 为 `wxapp://post/{id}`

### 3. 禁止的字段名转换

❌ **严禁进行以下转换：**
- `url` ↔ `original_url`（必须使用 `original_url`）
- `source` ↔ `platform`（必须使用 `platform`）
- 下划线命名 ↔ 驼峰命名的转换
- 数据库字段名的任何形式的"美化"或"简化"

### 4. API响应标准格式

每个接口的响应数据项必须包含以下核心字段：

```json
{
  "create_time": "2025-01-15T10:30:00",
  "update_time": "2025-01-15T10:30:00", 
  "author": "作者名称",
  "platform": "平台标识",
  "original_url": "原文链接",
  "tag": "标签信息",
  "title": "标题",
  "content": "内容",
  "relevance": 0.85
}
```

### 5. 验证规则

在开发API接口时：
1. 检查返回字段名是否与对应数据库表字段名完全一致
2. 确保没有进行任何字段名转换
3. 保留数据库表中存在的所有有用字段（如 `is_official`, `view_count` 等）
4. 对于不同表的相同概念字段（如author），优先使用数据库中的实际字段名

### 6. 特殊情况处理

#### 多表查询时的字段冲突
- 不同表有相同字段名时，保持原字段名不变
- 通过 `platform` 字段区分数据来源

#### 计算字段
- `relevance` - 相关度分数（计算得出，非数据库字段）
- `is_truncated` - 内容是否被截断（API处理标识）

## 执行要求

1. **新建接口**：严格按照此规范设计字段名
2. **修改现有接口**：逐步调整为符合此规范
3. **代码审查**：字段名一致性作为必检项
4. **文档更新**：API文档必须反映真实的数据库字段名
