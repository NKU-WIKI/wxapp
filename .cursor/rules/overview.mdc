---
alwaysApply: true
---

## 🎯 项目目标

本项目的目标是使用 Taro 框架构建一个高质量、可维护、性能优良的微信小程序。

本规范应该不断根据最新信息和最佳实践进行迭代。

## 🛠️ 技术栈与核心依赖

- **核心框架**: Taro 4.x (插件化架构)
- **UI 语言**: React (Hooks-first)
- **UI 组件库**: 优先使用微信小程序原生组件库比如weui，其次使用Taro UI
- **状态管理**: Redux (配合 React Hooks)
- **开发语言**: TypeScript
- **CSS 预处理器**: SCSS (`.scss`)
- **主要目标平台**: 微信小程序 (`weapp`)

为了保证项目正常运行，除了 `package.json` 中的业务依赖外，请确保以下核心插件已安装在 `devDependencies` 中：

- **框架插件**: `@tarojs/plugin-framework-react`
- **平台插件**: `@tarojs/plugin-platform-weapp`
- **CLI 工具**: `@tarojs/cli`
- **Babel 预设**: `babel-preset-taro` (处理 TSX/JSX 语法)
- **代码检查与格式化**: `ESLint`, `Prettier`, `stylelint` (通过 `eslint.config.js`, `stylelint.config.mjs`, `.prettierrc.mjs` 配置)
- **Git工作流**: `Husky`, `lint-staged`, `commitizen`

## 📁 项目结构

遵循 Taro 官方推荐的目录结构，并建议对 `src` 目录进行更精细的划分，以提高代码的可维护性：

```
.
├── .cursor/rules/           # Cursor AI 规范文档
│   ├── overview.mdc
│   ├── practices.mdc
│   └── style-guide.mdc
├── config                   # Taro 编译配置目录
│   ├── dev.ts
│   ├── index.ts
│   └── prod.ts
├── src                      # 源码目录
│   ├── app.config.ts
│   ├── app.scss
│   ├── app.tsx
│   ├── assets
│   ├── components
│   ├── constants
│   ├── pages
│   ├── services
│   ├── store
│   └── types
├── .cursorrules             # Cursor AI 配置文件入口
├── .prettierrc.mjs          # Prettier 配置文件
├── babel.config.js          # Babel 配置文件
├── eslint.config.js         # ESLint 配置文件 (Flat Config)
├── package.json
├── project.config.json
├── stylelint.config.mjs
└── tsconfig.json
```

## 核心功能模块

- **首页 (Home)**: 采用信息流展示推荐内容、热点和校园热榜。
- **发现 (Explore)**: 集合校园热点、AI 助手、校园活动和学习资源等卡片式入口。
- **发布 (Publish)**: 提供富文本编辑器，支持标题、正文、图片、话题标签，并集成 AI 润色建议。
- **消息 (Notifications)**: 分类展示点赞、收藏和评论。
- **我的 (Profile)**: 展示用户基本信息、动态、社交数据，并提供收藏、评论、点赞、草稿箱等入口。

## 参考项目

本项目在开发过程中，积极参考了以下优秀的开源项目作为最佳实践范例：

1.  **[lsqy/taro-music](https://github.com/lsqy/taro-music)**
    - **学习重点**: Redux 状态管理, 组件封装, 项目结构。
2.  **[kala888/tixwork](https://github.com/kala888/tixwork)**
    - **学习重点**: 复杂业务逻辑与数据流, DVA 状态管理, 工程化实践。

## 🔧 开发环境信息

- **操作系统**: Windows 11
- **Node.js版本**: 20.x (推荐使用 nvm 管理)
- **包管理器**: npm
- **IDE**: Cursor AI (推荐)
